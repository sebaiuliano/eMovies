plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdk versions.compileSdk

    defaultConfig {
        applicationId "com.siuliano.emovies"
        minSdk versions.minSdk
        targetSdk versions.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            def prop = new Properties()
            prop.load(new FileInputStream(rootProject.file(
                    "\\app\\src\\main\\java\\com\\siuliano\\emovies\\secure\\emovies_creds.properties"
            )))
            buildConfigField('String', 'BASE_URL', prop['BASE_URL'])
            buildConfigField('String', 'API_KEY', prop['API_KEY'])

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            def prop = new Properties()
            prop.load(new FileInputStream(rootProject.file(
                    "\\app\\src\\main\\java\\com\\siuliano\\emovies\\secure\\emovies_creds.properties"
            )))
            buildConfigField('String', 'BASE_URL', prop['BASE_URL'])
            buildConfigField('String', 'API_KEY', prop['API_KEY'])
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.play:core-ktx:1.8.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.+'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:${versions.lifecycle}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:${versions.lifecycle}"

    //Fragments
    implementation "androidx.fragment:fragment-ktx:${versions.fragment}"

    //Timber
    implementation "com.jakewharton.timber:timber:${versions.timber}"

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:${versions.retrofit}"
    implementation "com.squareup.retrofit2:converter-moshi:${versions.converter_moshi_version}"

    //Moshi
    implementation "com.squareup.moshi:moshi:${versions.moshi}"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}"

    //Gson
    implementation "com.google.code.gson:gson:${versions.gson}"

    // Koin
    implementation "io.insert-koin:koin-android:${versions.koin}"

    // Koin Test
    testImplementation "io.insert-koin:koin-test:${versions.koin}"

    //Logging Interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:${versions.logging_interceptor}"

    //Glide
    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    annotationProcessor "com.github.bumptech.glide:compiler:${versions.glide}"

    // Navigation Component
    implementation("androidx.navigation:navigation-fragment-ktx:${versions.navigation}")
    implementation("androidx.navigation:navigation-ui-ktx:${versions.navigation}")

    // Navigation Component - Feature module Support
    implementation("androidx.navigation:navigation-dynamic-features-fragment:${versions.navigation}")

    // Navigation Component - Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:${versions.navigation}")

    //Mock
    testImplementation "org.mockito:mockito-inline:${versions.mockito}"
    testImplementation "org.mockito:mockito-core:${versions.mockito}"
}